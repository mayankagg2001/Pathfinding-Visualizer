{"version":3,"sources":["PathfindingVisualizer/Node/Node.js","PathfindingVisualizer/Algorithms/BFS.js","PathfindingVisualizer/Algorithms/DFS.js","PathfindingVisualizer/Algorithms/Djikstra's.js","PathfindingVisualizer/Algorithms/A_Star.js","PathfindingVisualizer/PathFindingVisualizer.js","PathfindingVisualizer/Mazes/RandomMaze.js","PathfindingVisualizer/Mazes/RandomWeight.js","App.js","reportWebVitals.js","index.js"],"names":["Node","side","leftmost","top","visited","onMouseDown","wall","onMouseUp","onMouseOver","onMouseOut","rowindex","columnindex","start","target","id","onContextMenu","e","preventDefault","className","draggable","onDragStart","onDrop","style","height","width","onMouseEnter","onMouseLeave","check","i","j","end","isrunning","PathFindingVisualizer","h","window","innerHeight","useState","innerWidth","w","colnumber","rownumber","Math","floor","curstart","curtarget","ismarked","currentalgo","generategrid","grid1","grid","prevr","prevc","pressed","Enterpressed","istart","istarget","isweighted","iswall","speed","rows","cols","node","rightmost","bottom","weighted","push","display1","col","r","c","toggleweight","console","log","togglewalls","document","getElementById","classList","add","handlemouseover","handlemousedown","handlemouseup","rown","coln","ele","remove","newnode","newnode1","newgrid","slice","handlemouseout","breadthfirstsearch","depthfirstsearch","djikstraalgo","astaralgo","copygrid","copynode","toggle","type","startnodey1","startnodex1","targetnodex1","targetnodey1","count","arr","parent","length","x1","ans","temparr","temparr1","check1","shift","curr","bfs","instantanimate","instantanimate2","timetaken","animate","animate2","gridcopy","x","unshift","dfs","weight","sort","a","b","djikstra","g","x2","x3","abs","a_star","time","y","setTimeout","alert","addEventListener","key","class","onClick","resetBoard","randompos","random","randommaze","randomweight","for","name","onChange","v","parseInt","value","changespeed","map","row","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2b411f44.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport \"./Node.css\"\r\nfunction Node({ side,\r\n    leftmost,\r\n    top,\r\n    visited,\r\n    wall,\r\n    onMouseDown,\r\n    onMouseUp,\r\n    onMouseOver,\r\n    onMouseOut,\r\n    rowindex,\r\n    columnindex,\r\n    start,\r\n    target,\r\n}) {\r\n\r\n    return (\r\n\r\n\r\n\r\n        <div id={`${rowindex}-${columnindex}`} onContextMenu = {(e)=>{e.preventDefault();return false;}}\r\n            className={`Node ${leftmost ? \"leftmost\" : \"\"} ${visited ? \"visited\" : \"\"} ${top ? \"top\" : \"\"} ${start ? \"start\" : \"\"} ${target ? \"target\" : \"\"}`}\r\n            draggable = {false}\r\n            onDragStart = {()=> {return false} }  onDrop = {()=> {return false} }\r\n            style={{ height: `${side}px`, width: `${side}px` }}\r\n            onMouseDown={(e)=>{ e.preventDefault();onMouseDown(rowindex, columnindex)}} \r\n            onMouseUp={()=>{onMouseUp(rowindex,columnindex)}}\r\n            onMouseEnter={() => onMouseOver(rowindex, columnindex)}\r\n            onMouseLeave = {()=>onMouseOut(rowindex,columnindex)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Node;\r\n","import React from 'react'\r\n\r\n\r\nfunction check(i,j,end)\r\n{\r\n    if(i === end[0] && j === end[1]) \r\n    {   \r\n        return true;\r\n    }\r\n    return false;\r\n\r\n}\r\n\r\nexport function bfs(grid,start,end)\r\n{   //let grid = grid.slice();\r\n   //alert(start);\r\n    //alert(end);\r\n    //let visited = [];\r\n    let parent = [];\r\n    for(let i=0;i<grid.length;i++)\r\n    {   let x = [];\r\n        let x1 = [];\r\n        for(let j=0;j<grid[0].length;j++)\r\n        {   x1.push(start);\r\n           // x.push(false);\r\n        }\r\n        //visited.push(x);\r\n        parent.push(x1);\r\n    }\r\nlet ans = [];\r\nlet temparr = [];\r\nlet temparr1 = [];\r\nlet i,j;\r\nans.push(start);\r\n//temparr.push(start);\r\n//console.log(end);\r\nlet check1 = false;\r\nwhile(true && ans.length>0)\r\n{   \r\n    i = ans[0][0];\r\n    j = ans[0][1];\r\n    // temparr.push([i,j]);\r\n    ans.shift();\r\n    grid[i][j].visited = true;\r\n    // if(check(i,j,end)) {check1=true;break;}\r\n\r\n\r\n    if(i-1>=0 && grid[i-1][j].visited===false && grid[i-1][j].wall===false)\r\n    {\r\n        ans.push([i-1,j]);\r\n        grid[i-1][j].visited = true;\r\n        temparr.push([i-1,j]);\r\n        parent[i-1][j] = [i,j];\r\n        if(check(i-1,j,end)) {check1 = true;break;}\r\n    }\r\n\r\n\r\n    if(j+1<grid[0].length && grid[i][j+1].visited===false && grid[i][j+1].wall===false)\r\n    {\r\n        ans.push([i,j+1]);\r\n        grid[i][j+1].visited = true;\r\n        temparr.push([i,j+1]);\r\n        parent[i][j+1] = [i,j];\r\n        if(check(i,j+1,end)) {check1 = true;break;}\r\n    }\r\n\r\n\r\n    if(i+1<grid.length && grid[i+1][j].visited===false && grid[i+1][j].wall===false)\r\n    {\r\n        ans.push([i+1,j]);\r\n        grid[i+1][j].visited = true;\r\n        temparr.push([i+1,j]);\r\n        parent[i+1][j] = [i,j];\r\n        if(check(i+1,j,end)) {check1 = true;break;}\r\n    }\r\n\r\n    if(j-1>=0 && grid[i][j-1].visited===false && grid[i][j-1].wall===false)\r\n    {\r\n        ans.push([i,j-1]);\r\n        grid[i][j-1].visited = true;\r\n        temparr.push([i,j-1]);\r\n        parent[i][j-1] = [i,j];\r\n        if(check(i,j-1,end)) {check1 = true;break;}\r\n    }\r\n   \r\n    \r\n\r\n   \r\n\r\n}\r\n\r\n\r\n\r\nlet curr = end;\r\nwhile(curr!==start)\r\n{\r\n    temparr1.push(curr);\r\n    curr = parent[curr[0]][curr[1]];\r\n}\r\nreturn [temparr,temparr1,check1];\r\n//console.log(temparr1);\r\n//return temparr;\r\n\r\nconsole.log(\"function reached\");\r\n}\r\n","import React from 'react'\r\n\r\n\r\nfunction check(i,j,end)\r\n{\r\n    if(i === end[0] && j === end[1]) \r\n    {   \r\n        return true;\r\n    }\r\n    return false;\r\n\r\n}\r\n\r\nexport function dfs(grid,start,end)\r\n{   let gridcopy = grid.slice();\r\n   //alert(start);\r\n    //alert(end);\r\n    let visited = [];\r\n    let parent = [];\r\n    for(let i=0;i<grid.length;i++)\r\n    {   let x = [];\r\n        let x1 = [];\r\n        for(let j=0;j<grid[0].length;j++)\r\n        {   x1.push(start);\r\n            x.push(false);\r\n        }\r\n        visited.push(x);\r\n        parent.push(x1);\r\n    }\r\nlet ans = [];\r\nlet temparr = [];\r\nlet temparr1 = [];\r\nlet i,j;\r\nlet check1 = false;\r\nans.push(start);\r\ntemparr.push(start);\r\n//console.log(end);\r\nwhile(true && ans.length>0)\r\n{   \r\n    i = ans[0][0];\r\n    j = ans[0][1];\r\n    ans.shift();\r\n    visited[i][j] = true;\r\n    temparr.push([i,j]);\r\n    if(check(i,j,end)) {check1 = true;break;}\r\n\r\n    \r\n    if(j-1>=0 && visited[i][j-1]===false && gridcopy[i][j-1].wall===false)\r\n    {\r\n        ans.unshift([i,j-1]);\r\n        //visited[i][j-1] = true;\r\n       //temparr.push([i,j-1]);\r\n        parent[i][j-1] = [i,j];\r\n        // if(check(i,j-1,end)) {check1 = true;break;}\r\n    }\r\n\r\n    if(i+1<gridcopy.length && visited[i+1][j]===false && gridcopy[i+1][j].wall===false)\r\n    {\r\n        ans.unshift([i+1,j]);\r\n        //visited[i+1][j] = true;\r\n       // temparr.push([i+1,j]);\r\n        parent[i+1][j] = [i,j];\r\n        // if(check(i+1,j,end)) {check1 = true;break;}\r\n    }\r\n\r\n    if(j+1<gridcopy[0].length && visited[i][j+1]===false && gridcopy[i][j+1].wall===false)\r\n    {\r\n        ans.unshift([i,j+1]);\r\n        //visited[i][j+1] = true;\r\n        //temparr.push([i,j+1]);\r\n        parent[i][j+1] = [i,j];\r\n        // if(check(i,j+1,end)) {check1 = true;break;}\r\n    }\r\n\r\n\r\n    \r\n\r\n    if(i-1>=0 && visited[i-1][j]===false && gridcopy[i-1][j].wall===false)\r\n    {\r\n        ans.unshift([i-1,j]);\r\n        //visited[i-1][j] = true;\r\n        //temparr.push([i-1,j]);\r\n        parent[i-1][j] = [i,j];\r\n        // if(check(i-1,j,end)) {check1 = true;break;}\r\n    }\r\n    \r\n\r\n}\r\n\r\nlet curr = end;\r\nwhile(curr!==start)\r\n{\r\n    temparr1.push(curr);\r\n    curr = parent[curr[0]][curr[1]];\r\n}\r\nreturn [temparr,temparr1,check1];\r\n//console.log(temparr1);\r\n//return temparr;\r\n\r\nconsole.log(\"function reached\");\r\n}\r\n","import React from 'react'\r\n\r\n\r\nfunction check(i,j,end)\r\n{\r\n    if(i === end[0] && j === end[1]) \r\n    {   \r\n        return true;\r\n    }\r\n    return false;\r\n\r\n}\r\n\r\nexport function djikstra(grid,start,end)\r\n{   console.log(\"reached\");\r\n    let gridcopy = grid.slice();\r\n   //alert(start);\r\n    //alert(end);\r\n    let visited = [];\r\n    let parent = [];\r\n    for(let i=0;i<grid.length;i++)\r\n    {   let x = [];\r\n        let x1 = [];\r\n        for(let j=0;j<grid[0].length;j++)\r\n        {   x1.push(start);\r\n            x.push(false);\r\n        }\r\n        visited.push(x);\r\n        parent.push(x1);\r\n    }\r\nlet ans = [];\r\nlet temparr = [];\r\nlet temparr1 = [];\r\nlet i,j;\r\nans.push([start,0]);\r\ntemparr.push(start);\r\n//console.log(end);\r\nlet check1 = false;\r\nwhile(true && ans.length>0)\r\n{   console.log(\"in loop\");\r\n    i = ans[0][0][0];\r\n    j = ans[0][0][1];\r\n    let w = ans[0][1];\r\n    ans.shift();\r\n    visited[i][j] = true;\r\n    temparr.push([i,j]);\r\n    if(check(i,j,end)) {check1=true;break;}\r\n    \r\n    if(j-1>=0 && visited[i][j-1]===false && gridcopy[i][j-1].wall===false)\r\n    {   let weight = 1;\r\n        if(gridcopy[i][j-1].weighted) weight = 10;\r\n        ans.push([[i,j-1],w+weight]);\r\n        visited[i][j-1] = true;\r\n    //    temparr.push([i,j-1]);\r\n        parent[i][j-1] = [i,j];\r\n        // if(check(i,j-1,end)) {check1 = true;break;}\r\n    }\r\n\r\n    if(i+1<gridcopy.length && visited[i+1][j]===false && gridcopy[i+1][j].wall===false)\r\n    {\r\n        let weight = 1;\r\n        if(gridcopy[i+1][j].weighted) weight = 10;\r\n        ans.push([[i+1,j],w+weight]);\r\n        visited[i+1][j] = true;\r\n        // temparr.push([i+1,j]);\r\n        parent[i+1][j] = [i,j];\r\n        // if(check(i+1,j,end)) {check1 = true;break;}\r\n    }\r\n\r\n    if(j+1<gridcopy[0].length && visited[i][j+1]===false && gridcopy[i][j+1].wall===false)\r\n    {\r\n        let weight = 1;\r\n        if(gridcopy[i][j+1].weighted) weight = 10;\r\n        ans.push([[i,j+1],w+weight]);\r\n        visited[i][j+1] = true;\r\n        // temparr.push([i,j+1]);\r\n        parent[i][j+1] = [i,j];\r\n        // if(check(i,j+1,end)) {check1 = true;break;}\r\n    }\r\n\r\n\r\n    \r\n\r\n    if(i-1>=0 && visited[i-1][j]===false && gridcopy[i-1][j].wall===false)\r\n    {\r\n        let weight = 1;\r\n        if(gridcopy[i-1][j].weighted) weight = 10;\r\n        ans.push([[i-1,j],w+weight]);\r\n        visited[i-1][j] = true;\r\n        // temparr.push([i-1,j]);\r\n        parent[i-1][j] = [i,j];\r\n        // if(check(i-1,j,end)) {check1 = true;break;}\r\n    }\r\n    ans.sort((a,b)=>{\r\n        return (a[1]-b[1]);\r\n    })\r\n\r\n}\r\n\r\nlet curr = end;\r\nwhile(curr!==start)\r\n{\r\n    temparr1.push(curr);\r\n    curr = parent[curr[0]][curr[1]];\r\n}\r\nreturn [temparr,temparr1,check1];\r\n//console.log(temparr1);\r\n//return temparr;\r\n\r\nconsole.log(\"function reached\");\r\n}\r\n","import React from 'react'\r\n\r\n\r\nfunction check(i,j,end)\r\n{\r\n    if(i === end[0] && j === end[1]) \r\n    {   \r\n        return true;\r\n    }\r\n    return false;\r\n\r\n}\r\n\r\nexport function a_star(grid,start,end)\r\n{   console.log(\"reached\");\r\n    let gridcopy = grid.slice();\r\n    let visited = [];\r\n    let parent = [];\r\n    let g = [];\r\n    let h = [];\r\n    for(let i=0;i<grid.length;i++)\r\n    {   let x = [];\r\n        let x1 = [];\r\n        let x2 = [];\r\n        let x3 = [];\r\n        for(let j=0;j<grid[0].length;j++)\r\n        {   x1.push(start);\r\n            x.push(false);\r\n            x2.push(0);\r\n            x3.push(Math.abs(i-end[0])+Math.abs(j-end[1]));\r\n        }\r\n        visited.push(x);\r\n        parent.push(x1);\r\n        g.push(x2);\r\n        h.push(x3);\r\n    }\r\nlet ans = [];\r\nlet temparr = [];\r\nlet temparr1 = [];\r\nlet i,j;\r\nans.push([start,g[start[0]][start[1]]+h[start[0]][start[1]]]);\r\ntemparr.push(start);\r\n//console.log(end);\r\nlet check1 = false;\r\nwhile(true && ans.length>0)\r\n{   console.log(\"in loop\");\r\n    i = ans[0][0][0];\r\n    j = ans[0][0][1];\r\n    let w = ans[0][1];\r\n    ans.shift();\r\n    visited[i][j] = true;\r\n    temparr.push([i,j]);\r\n    if(check(i,j,end)) {check1 = true;break;}\r\n    \r\n    if(j-1>=0 && visited[i][j-1]===false && gridcopy[i][j-1].wall===false)\r\n    {   let weight = 1;\r\n        \r\n        if(gridcopy[i][j-1].weighted) weight = 10;\r\n\r\n        g[i][j-1] = g[i][j]+weight;\r\n        ans.push([[i,j-1],g[i][j-1]+h[i][j-1]]);\r\n        visited[i][j-1] = true;\r\n    //    temparr.push([i,j-1]);\r\n        parent[i][j-1] = [i,j];\r\n        // if(check(i,j-1,end)) {check1 = true;break;}\r\n    }\r\n\r\n    if(i+1<gridcopy.length && visited[i+1][j]===false && gridcopy[i+1][j].wall===false)\r\n    {\r\n        let weight = 1;\r\n        if(gridcopy[i+1][j].weighted) weight = 10;\r\n        g[i+1][j] = g[i][j]+weight;\r\n        ans.push([[i+1,j],g[i+1][j]+h[i+1][j]]);\r\n        visited[i+1][j] = true;\r\n        // temparr.push([i+1,j]);\r\n        parent[i+1][j] = [i,j];\r\n        // if(check(i+1,j,end)) {check1 = true;break;}\r\n    }\r\n\r\n    if(j+1<gridcopy[0].length && visited[i][j+1]===false && gridcopy[i][j+1].wall===false)\r\n    {\r\n        let weight = 1;\r\n        if(gridcopy[i][j+1].weighted) weight = 10;\r\n        g[i][j+1] = g[i][j]+weight;\r\n        ans.push([[i,j+1],g[i][j+1]+h[i][j+1]]);\r\n        visited[i][j+1] = true;\r\n        // temparr.push([i,j+1]);\r\n        parent[i][j+1] = [i,j];\r\n        // if(check(i,j+1,end)) {check1 = true;break;}\r\n    }\r\n\r\n\r\n    \r\n\r\n    if(i-1>=0 && visited[i-1][j]===false && gridcopy[i-1][j].wall===false)\r\n    {\r\n        let weight = 1;\r\n        if(gridcopy[i-1][j].weighted) weight = 10;\r\n        g[i-1][j] = g[i][j]+weight;\r\n        ans.push([[i-1,j],g[i-1][j]+h[i-1][j]]);\r\n        visited[i-1][j] = true;\r\n        // temparr.push([i-1,j]);\r\n        parent[i-1][j] = [i,j];\r\n        // if(check(i-1,j,end)) {check1 = true;break;}\r\n    }\r\n    ans.sort((a,b)=>{\r\n        return (a[1]-b[1]);\r\n    })\r\n\r\n}\r\n\r\nlet curr = end;\r\nwhile(curr!==start)\r\n{\r\n    temparr1.push(curr);\r\n    curr = parent[curr[0]][curr[1]];\r\n}\r\nreturn [temparr,temparr1,check1];\r\n//console.log(temparr1);\r\n//return temparr;\r\n\r\nconsole.log(\"function reached\");\r\n}\r\n","import React, { useState } from 'react';\r\nimport Node from \"./Node/Node\";\r\nimport './PathFindingVisualizer.css';\r\nimport {bfs} from \"./Algorithms/BFS\";\r\nimport {dfs} from \"./Algorithms/DFS\";\r\nimport {djikstra} from \"./Algorithms/Djikstra's\";\r\nimport { randommaze } from './Mazes/RandomMaze';\r\nimport { randomweight } from './Mazes/RandomWeight';\r\nimport {a_star} from \"./Algorithms/A_Star\";\r\n\r\nexport let isrunning = false;\r\n\r\n\r\nfunction PathFindingVisualizer() {\r\n\r\n    const h = window.innerHeight;\r\n    const [w, setw] = useState(window.innerWidth);\r\n    let colnumber = 60;\r\n    let side = (w / colnumber > 11) ? w / colnumber : 11;\r\n    colnumber = (side === w / colnumber) ? colnumber : w / 11;\r\n    let rownumber = Math.floor(0.78 * h / side);\r\n    let startnodey = 7;\r\n    let startnodex = 15;\r\n    let finishnodey = 7;\r\n    let finishnodex = 40;\r\n    let curstart = [7,15];\r\n    let curtarget = [7,40];\r\n    let ismarked = false;\r\n    let currentalgo = \"\";\r\n    //const [start,setstart] = useState([7,15])\r\n    //const [target,settarget] = useState([7,40])\r\n    const [grid1, setgrid1] = useState(generategrid);\r\n    let grid = grid1;\r\n    let prevr = -1;\r\n    let prevc = -1;\r\n    //const [pressed, setpressed] = useState(false);\r\n    let pressed = false;\r\n    //const [Enterpressed, setEnterpressed] = useState(false);\r\n    let Enterpressed = false;\r\n    //const [istart,setistart] = useState(false);\r\n    let istart = false;\r\n    //const [istarget,setistarget] = useState(false);\r\n    let istarget = false;\r\n    let isweighted = false;\r\n    let iswall = false;\r\n    let speed = 8;\r\n    const fast = 8;\r\n    const average = 40;\r\n    const slow  = 200; \r\n\r\n    //window.addEventListener('resize', () => { setw(window.innerWidth); side = 0.98 * w / colnumber; });\r\n\r\n    window.addEventListener('mouseup', () => { pressed = false; prevr = -1; prevc = -1;  });\r\n\r\n    window.addEventListener('keyup', (e) => { if (e.key === \"w\") { Enterpressed = false; prevr = -1; prevc = -1; } });\r\n\r\n    window.addEventListener('keydown', (e) => { if (e.key === \"w\") Enterpressed = true; });\r\n    //window.addEventListener('keypress', (e) =>{ if (e.key === \"Enter\") setEnterpressed(true);setEnterpressed(false); });\r\n\r\n    function generategrid() {\r\n        let rows = [];\r\n        for (let j = 0; j < rownumber; j++) {\r\n            let cols = [];\r\n            for (let i = 0; i < colnumber; i++) {\r\n                const node = {\r\n                    side: side,\r\n                    leftmost: i === 0,\r\n                    rightmost: i === colnumber - 1,\r\n                    top: j === 0,\r\n                    bottom: j === rownumber - 1,\r\n                    rowindex: j,\r\n                    columnindex: i,\r\n                    visited: false,\r\n                    wall: false,\r\n                    weighted: false,\r\n                    start: (j === startnodey && i === startnodex),\r\n                    target: (j === finishnodey && i === finishnodex),\r\n                    \r\n                };\r\n                cols.push(node);\r\n            }\r\n            rows.push(cols);\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    function resetBoard() {\r\n        // grid = generategrid();\r\n        // for (let i = 0; i < rownumber; i++) {\r\n        //     for (let j = 0; j < colnumber; j++) {\r\n        //         document.getElementById(`${i}-${j}`).classList.remove(\"wall\" ,\"weighted\");\r\n        //     }\r\n        // }\r\n        if(isrunning) return;\r\n        isrunning = false;\r\n        ismarked = false;\r\n        grid = generategrid();\r\n        for (let i = 0; i < rownumber; i++) {\r\n            for (let j = 0; j < colnumber; j++) {\r\n                document.getElementById(`${i}-${j}`).classList.remove(\"wall\" ,\"weighted\",\"visited\",\"Shortestpath\",\"start\",\"target\",\"visitednormal\");\r\n            }\r\n        }\r\n        document.getElementById(`${startnodey}-${startnodex}`).classList.add(\"start\");\r\n        document.getElementById(`${finishnodey}-${finishnodex}`).classList.add(\"target\");\r\n        //setgrid1(generategrid());\r\n        pressed = false;\r\n        Enterpressed = false;\r\n        istarget = false;\r\n        istart = false;\r\n        prevr = -1;\r\n        prevc = -1;\r\n        isweighted = false;\r\n        iswall = false;\r\n    }\r\n\r\n    function display(row) {\r\n        const checktop = row[0].top;\r\n        const checkbottom = row[0].bottom;\r\n        return (\r\n            <div className=\"row\">\r\n                {row.map(display1)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function display1(col) {\r\n        return <Node side={col.side} leftmost={col.leftmost} top={col.top}\r\n            onMouseDown={(rowindex, columnindex) => handlemousedown(rowindex, columnindex)}\r\n            //onMouseDown1 = {(rowindex,columnindex) => handlemousedown1(rowindex,columnindex)}\r\n            rowindex={col.rowindex} columnindex={col.columnindex}\r\n            wall={col.wall}\r\n            pressed={pressed}\r\n            onMouseUp={(rowindex,columnindex) => handlemouseup(rowindex,columnindex)}\r\n            onMouseOver={(rowindex, columnindex) => handlemouseover(rowindex, columnindex)}\r\n            onMouseOut = {(rowindex,columnindex) => handlemouseout(rowindex,columnindex)}\r\n            //onMouseUp1 = {(rowindex,columnindex) => handlemouseup1(rowindex,columnindex)}\r\n            start = {col.start}\r\n            target = {col.target}\r\n        />;\r\n    }\r\n\r\n    // function handlekeydown(r, c) {\r\n    //     //console.log(\"pressed\")\r\n    //     setEnterpressed(true);\r\n    //     toggleweight(r, c);\r\n    // }\r\n\r\n\r\n    function handlemousedown(r, c) {\r\n        //console.log(grid[r][c]);\r\n        //console.log(grid);\r\n        if(isrunning) return;\r\n        if(!Enterpressed && grid[r][c].start===true) \r\n        {   \r\n            istart = true;\r\n            istart = false;\r\n            document.getElementById(`${r}-${c}`).classList.add(\"start\");\r\n            //console.log(\"Onstart\");\r\n            handlemouseover(r,c);\r\n            istart = true;\r\n            //console.log(\"onstart2\");\r\n            return;\r\n        }\r\n        else if(!Enterpressed && grid[r][c].target===true)\r\n        {\r\n            istarget = true;\r\n            document.getElementById(`${r}-${c}`).classList.add(\"target\");\r\n            handlemouseover(r,c);\r\n\r\n            return;\r\n        }\r\n        else if(!Enterpressed)\r\n        {\r\n        console.log(\"Onwall\");\r\n        //setpressed(true);\r\n        pressed = true;\r\n        togglewalls(r, c);\r\n        return;\r\n        }\r\n        else\r\n        {\r\n            //setpressed(true);\r\n            pressed = true;\r\n            toggleweight(r,c);\r\n            return;\r\n        }\r\n    }\r\n\r\n    function handlemouseup(r,c) {\r\n        if(isrunning) return;\r\n        prevr = -1;\r\n        prevc = -1;\r\n        // console.log(grid[r][c]);\r\n        // console.log(grid);\r\n        // if(istart)\r\n        // {setstart([r,c]);}\r\n\r\n        // if(istarget)\r\n        // {setstart([r,c]);}\r\n        //console.log([startnodex,startnodey]);\r\n        //console.log([finishnodex,finishnodey]);\r\n        //document.getElementById(`${r}-${c}`).click();\r\n       // setpressed(false);\r\n       pressed = false; \r\n       istart = false;\r\n       istarget = false;\r\n        //setgrid1(grid);\r\n\r\n    }\r\n\r\n    function handlemouseover(r, c) {\r\n        if(isrunning) return;\r\n        //console.log(pressed);\r\n        \r\n        if(!pressed && !Enterpressed && !istart && !istarget) return;\r\n        \r\n        //if(!istarget && grid[r][c].target===true) return;\r\n\r\n        //if(!istart && grid[r][c].start===true) return;\r\n\r\n        if (prevr === r && prevc === c) return;\r\n\r\n        //console.log(\"mousein\");\r\n\r\n        if (!Enterpressed && pressed) { \r\n            if(grid[r][c].target || grid[r][c].start) return;\r\n            togglewalls(r, c); return; }\r\n        \r\n        if (Enterpressed && pressed) { toggleweight(r, c); return; }\r\n        if (istart) {\r\n            \r\n            let rown = r;\r\n            let coln = c;\r\n\r\n            if(grid[r][c].target === true) {rown = curstart[0];coln = curstart[1];}\r\n            console.log(grid[r][c].target)\r\n            console.log(rown,coln);\r\n            if(grid[rown][coln].wall) iswall = true;\r\n            if(grid[rown][coln].weighted) isweighted=true;\r\n           // setstart([r,c]);\r\n            document.getElementById(`${rown}-${coln}`).classList.remove(\"wall\",\"weighted\");\r\n             document.getElementById(`${rown}-${coln}`).classList.add(\"start\");\r\n            const newnode = grid[rown][coln];\r\n            let newnode1 = {...newnode,wall:false,weighted:false,start:true};\r\n            //grid[r][c] = newnode1;\r\n            let newgrid = grid.slice();\r\n            newgrid[rown][coln] = newnode1;\r\n            grid = newgrid.slice();\r\n            curstart = [rown,coln];\r\n            if(ismarked===true && currentalgo==\"bfs\") breadthfirstsearch(0);\r\n            if(ismarked===true && currentalgo==\"dfs\") depthfirstsearch(0);\r\n            if(ismarked===true && currentalgo==\"djikstra\") djikstraalgo(0);\r\n            if(ismarked===true && currentalgo==\"astar\") astaralgo(0);\r\n\r\n            //setgrid1(newgrid);\r\n            return;\r\n        }\r\n        if (istarget)\r\n        {   let rown = r;\r\n            let coln = c;\r\n\r\n            if(grid[r][c].start === true) {rown = curtarget[0];coln = curtarget[1];}\r\n            console.log(grid[r][c].start)\r\n            console.log(rown,coln);\r\n            if(grid[rown][coln].wall) iswall = true;\r\n            if(grid[rown][coln].weighted) isweighted=true;\r\n           // setstart([r,c]);\r\n            document.getElementById(`${rown}-${coln}`).classList.remove(\"wall\",\"weighted\");\r\n             document.getElementById(`${rown}-${coln}`).classList.add(\"target\");\r\n            const newnode = grid[rown][coln];\r\n            let newnode1 = {...newnode,wall:false,weighted:false,target:true};\r\n            //grid[r][c] = newnode1;\r\n            let newgrid = grid.slice();\r\n            newgrid[rown][coln] = newnode1;\r\n            grid = newgrid.slice();\r\n            curtarget = [rown,coln];\r\n            if(ismarked===true && currentalgo==\"bfs\") breadthfirstsearch(0);\r\n            if(ismarked===true && currentalgo==\"dfs\") depthfirstsearch(0);\r\n            if(ismarked===true && currentalgo==\"djikstra\") djikstraalgo(0);\r\n            if(ismarked===true && currentalgo==\"astar\") astaralgo(0);\r\n            //setgrid1(newgrid);\r\n            return;\r\n        }\r\n        //console.log([r,c]);\r\n        \r\n    }\r\n\r\n    // function handlemousedown1(r,c)\r\n    // {\r\n    //   setistart(true);\r\n    //   document.getElementById(`${r}-${c}`).classList.add(\"start\");\r\n    // }\r\n\r\n    function handlemouseout(r,c)\r\n    {   if(isrunning) return;\r\n        if(!istart && !istarget) return;\r\n        \r\n        if(istart) \r\n        { \r\n        let rown = r;\r\n        let coln = c;\r\n        if(grid[r][c].target) {rown = curstart[0];coln = curstart[1];}    \r\n        let ele = document.getElementById(`${rown}-${coln}`).classList;\r\n        ele.remove(\"start\")\r\n        if(iswall) ele.add(\"wall\");\r\n        if(isweighted) ele.add(\"weighted\");\r\n        const newnode = grid[rown][coln];\r\n        let newnode1 = {...newnode, weighted:isweighted , wall:iswall, start:false};\r\n        //grid[r][c] = newnode1;\r\n        let newgrid = grid.slice();\r\n        newgrid[rown][coln] = newnode1;\r\n        grid = newgrid.slice();\r\n        //setgrid1(newgrid);\r\n        iswall = false;\r\n        isweighted = false;\r\n        //console.log(\"mouseout\")\r\n        return;\r\n    }\r\n    if(istarget)\r\n    {   \r\n        let rown = r;\r\n        let coln = c;\r\n        if(grid[r][c].start) {rown = curtarget[0];coln = curtarget[1];}\r\n        let ele = document.getElementById(`${rown}-${coln}`).classList;\r\n        ele.remove(\"target\")\r\n        if(iswall) ele.add(\"wall\");\r\n        if(isweighted) ele.add(\"weighted\");\r\n        const newnode = grid[r][c];\r\n        let newnode1 = {...newnode, weighted:isweighted , wall:iswall, target:false};\r\n        //grid[r][c] = newnode1;\r\n        let newgrid = grid.slice();\r\n        newgrid[rown][coln] = newnode1;\r\n        grid = newgrid.slice();\r\n        //setgrid1(newgrid);\r\n        iswall = false;\r\n        isweighted = false;\r\n        //settarget([r,c]);\r\n        return;   \r\n    }\r\n    }\r\n\r\n    // function handlemouseup1(r,c)\r\n    // {\r\n    //     setistart(false);\r\n    // }\r\n\r\n    function togglewalls(r, c) {\r\n        let copygrid = grid.slice();\r\n        const copynode = grid[r][c];\r\n        let newnode = {\r\n            ...copynode,\r\n            weighted:false,\r\n            wall: !copynode.wall,\r\n        };\r\n        copygrid[r][c] = newnode;\r\n        document.getElementById(`${r}-${c}`).classList.remove(\"weighted\");\r\n        document.getElementById(`${r}-${c}`).classList.toggle(\"wall\");\r\n        grid[r][c] = newnode;\r\n        prevr = r;\r\n        prevc = c;\r\n    }\r\n\r\n    function toggleweight(r, c) {\r\n        let copygrid = grid.slice();\r\n        const copynode = grid[r][c];\r\n        let newnode = {\r\n            ...copynode,\r\n            wall:false,\r\n            weighted: !copynode.weighted,\r\n        };\r\n        copygrid[r][c] = newnode;\r\n        document.getElementById(`${r}-${c}`).classList.remove(\"wall\");\r\n        document.getElementById(`${r}-${c}`).classList.toggle(\"weighted\");\r\n        grid[r][c] = newnode;\r\n        prevr = r;\r\n        prevc = c;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function breadthfirstsearch(type)\r\n    {   if(isrunning) return;\r\n        if(!ismarked || type==1)\r\n        isrunning = true;\r\n        console.log(speed)\r\n        currentalgo = \"bfs\";\r\n\r\n        let count = 0;\r\n        //let count1 = 0;\r\n        let startnodey1 = curstart[1];\r\n        let startnodex1 = curstart[0];\r\n        let targetnodex1 = curtarget[1];\r\n        let targetnodey1 = curtarget[0];\r\n        for(let i=0;i<rownumber;i++)\r\n        {\r\n            for(let j=0;j<colnumber;j++)\r\n            {\r\n                if(grid[i][j].wall) count++;\r\n                if(grid[i][j].start) {startnodex1=j;startnodey1=i;}\r\n                if(grid[i][j].target) {targetnodex1=j;targetnodey1=i;}\r\n                grid[i][j].visited = false;\r\n                document.getElementById(`${i}-${j}`).classList.remove(\"weighted\");\r\n            }\r\n        }\r\n\r\n        const arr = bfs(grid,[startnodey1,startnodex1],[targetnodey1,targetnodex1])\r\n        //console.log(arr);\r\n        if(!ismarked || type==1)\r\n        {const timetaken = animate(arr[0]);\r\n        animate2(arr[1],timetaken,arr[2]);\r\n        ismarked = true;\r\n        }\r\n        else\r\n        {   \r\n            instantanimate(arr[0]);\r\n            instantanimate2(arr[1]);\r\n        }\r\n        //console.log(\"Function done\");\r\n        \r\n        \r\n        \r\n        //console.log(arr);\r\n        //alert(\"No of walls\"+count);\r\n        //alert(\"No of start\"+count1);\r\n        //alert(\"Dimension of start node \"+[startnodey1,startnodex1]);\r\n        //alert(\"dimension of end node \"+ [targetnodey1,targetnodex1]);\r\n\r\n    }\r\n\r\n    function depthfirstsearch(type)\r\n    {   if(isrunning) return;\r\n        if(!ismarked|| type==1)\r\n        isrunning = true;\r\n        let count = 0;\r\n        // ismarked = true;\r\n        //let count1 = 0;\r\n        currentalgo=\"dfs\";\r\n        let startnodey1 = 0;\r\n        let startnodex1 = 0;\r\n        let targetnodex1 = 0;\r\n        let targetnodey1 = 0;\r\n        for(let i=0;i<rownumber;i++)\r\n        {\r\n            for(let j=0;j<colnumber;j++)\r\n            {\r\n                if(grid[i][j].wall) count++;\r\n                if(grid[i][j].start) {startnodex1=j;startnodey1=i;}\r\n                if(grid[i][j].target) {targetnodex1=j;targetnodey1=i;}\r\n            }\r\n        }\r\n\r\n        const arr = dfs(grid,[startnodey1,startnodex1],[targetnodey1,targetnodex1])\r\n        // console.log(arr);\r\n        if(!ismarked || type==1)\r\n        {const timetaken = animate(arr[0]);\r\n        animate2(arr[1],timetaken,arr[2]);\r\n        ismarked = true;\r\n        }\r\n        else\r\n        {   \r\n            instantanimate(arr[0]);\r\n            instantanimate2(arr[1]);\r\n        }\r\n    }\r\n\r\n\r\n    function djikstraalgo(type)\r\n    {   if(isrunning) return;\r\n        if(!ismarked || type==1)\r\n        isrunning = true;\r\n        // ismarked = true;\r\n        let count = 0;\r\n        //let count1 = 0;\r\n        currentalgo=\"djikstra\";\r\n        let startnodey1 = 0;\r\n        let startnodex1 = 0;\r\n        let targetnodex1 = 0;\r\n        let targetnodey1 = 0;\r\n        for(let i=0;i<rownumber;i++)\r\n        {\r\n            for(let j=0;j<colnumber;j++)\r\n            {\r\n                if(grid[i][j].wall) count++;\r\n                if(grid[i][j].start) {startnodex1=j;startnodey1=i;}\r\n                if(grid[i][j].target) {targetnodex1=j;targetnodey1=i;}\r\n            }\r\n        }\r\n\r\n        const arr = djikstra(grid,[startnodey1,startnodex1],[targetnodey1,targetnodex1])\r\n        if(!ismarked || type==1)\r\n        {const timetaken = animate(arr[0]);\r\n        animate2(arr[1],timetaken,arr[2]);\r\n        ismarked = true;\r\n        }\r\n        else\r\n        {   \r\n            instantanimate(arr[0]);\r\n            instantanimate2(arr[1]);\r\n        }\r\n    }\r\n\r\n\r\n    function astaralgo(type)\r\n    {   if(isrunning) return;\r\n        if(!ismarked || type==1)\r\n        isrunning = true;\r\n        // ismarked = true;\r\n        let count = 0;\r\n        //let count1 = 0;\r\n        currentalgo=\"astar\";\r\n        let startnodey1 = 0;\r\n        let startnodex1 = 0;\r\n        let targetnodex1 = 0;\r\n        let targetnodey1 = 0;\r\n        for(let i=0;i<rownumber;i++)\r\n        {\r\n            for(let j=0;j<colnumber;j++)\r\n            {\r\n                if(grid[i][j].wall) count++;\r\n                if(grid[i][j].start) {startnodex1=j;startnodey1=i;}\r\n                if(grid[i][j].target) {targetnodex1=j;targetnodey1=i;}\r\n            }\r\n        }\r\n\r\n        const arr = a_star(grid,[startnodey1,startnodex1],[targetnodey1,targetnodex1])\r\n        // console.log(arr);\r\n        if(!ismarked || type==1)\r\n        {const timetaken = animate(arr[0]);\r\n        animate2(arr[1],timetaken,arr[2]);\r\n        ismarked = true;\r\n        }\r\n        else\r\n        {   \r\n            instantanimate(arr[0]);\r\n            instantanimate2(arr[1]);\r\n        }\r\n    }\r\n\r\n    function animate(arr)\r\n    {   var curr = 0;\r\n        const time = speed;\r\n\r\n        for(let i=0;i<rownumber;i++)\r\n        {\r\n            for(let j=0;j<colnumber;j++)\r\n            {\r\n                document.getElementById(`${i}-${j}`).classList.remove(\"visited\",\"Shortestpath\",\"visitednormal\");\r\n            }\r\n        }\r\n\r\n\r\n        for(let i=0;i<arr.length;i++)\r\n        {\r\n            const y = arr[i][0];\r\n            const x = arr[i][1];\r\n            setTimeout(()=>{document.getElementById(`${y}-${x}`).classList.add(\"currently\");\r\n            },curr+time);\r\n            curr = curr+time;\r\n            setTimeout(()=>{\r\n            document.getElementById(`${y}-${x}`).classList.remove(\"currently\");\r\n            document.getElementById(`${y}-${x}`).classList.add(\"visited\");\r\n            },curr+time);\r\n        }\r\n        return curr;\r\n    }\r\n\r\n    function instantanimate(arr)\r\n    {   //console.log(\"instantanimate\")\r\n    // console.log(arr);\r\n        for(let i=0;i<rownumber;i++)\r\n        {\r\n            for(let j=0;j<colnumber;j++)\r\n            {\r\n                document.getElementById(`${i}-${j}`).classList.remove(\"visited\",\"Shortestpath\",\"visitednormal\");\r\n            }\r\n        }\r\n\r\n        for(let i=0;i<arr.length;i++)\r\n        {\r\n            const y = arr[i][0];\r\n            const x = arr[i][1];\r\n            document.getElementById(`${y}-${x}`).classList.add(\"visitednormal\");\r\n        }\r\n\r\n    }\r\n\r\n    function animate2(arr,timetaken,check)\r\n    {   \r\n        var curr = timetaken;\r\n        const time = speed;\r\n        if(check)\r\n        {for(let i=arr.length-1;i>=0;i--)\r\n        {\r\n            const y = arr[i][0];\r\n            const x = arr[i][1];\r\n            setTimeout(()=>{\r\n                document.getElementById(`${y}-${x}`).classList.remove(\"visited\");\r\n                document.getElementById(`${y}-${x}`).classList.add(\"Shortestpath\");\r\n                \r\n        \r\n        },timetaken+time);\r\n        timetaken = timetaken+time;\r\n        }\r\n    setTimeout(()=>{isrunning=false;},timetaken+time);\r\n    }\r\n        if(!check) setTimeout(()=>{alert(\"NO SHORTEST PATH FOUND\");isrunning = false;},timetaken+time);\r\n    }\r\n\r\n    function instantanimate2(arr)\r\n    {   console.log(\"instantanimate2\");\r\n        console.log(arr);    \r\n    for(let i=arr.length-1;i>=0;i--)\r\n        {\r\n            const y = arr[i][0];\r\n            const x = arr[i][1];\r\n           \r\n                document.getElementById(`${y}-${x}`).classList.remove(\"visitednormal\");\r\n                document.getElementById(`${y}-${x}`).classList.add(\"Shortestpath\");\r\n                \r\n        \r\n       \r\n        }\r\n    \r\n\r\n\r\n    }\r\n\r\n\r\n    \r\n    function changespeed(e){\r\n        let v = parseInt(e.target.value)\r\n        speed = v;\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Grid_visualize\">\r\n\r\n            <div class=\"header__text\">\r\n                <h1>Pathfinding Visualizer</h1>\r\n            </div>\r\n            <div className=\"header\">\r\n                \r\n                \r\n                <button className=\"button\" onClick={() => resetBoard()}>Clear Board</button>\r\n                <button className=\"button\" onClick={() => breadthfirstsearch(1)}>Breadth First Search</button>\r\n                <button className=\"button\" onClick = {()=>depthfirstsearch(1)}>Depth First Search</button>\r\n                <button className=\"button\" onClick={()=>djikstraalgo(1)}>Djikstra's Algorithms</button>\r\n                <button className=\"button\" onClick = {()=>astaralgo(1)}>A* Algorithm</button>\r\n                <button className = \"button\" onClick={()=>randommaze(grid)}>Random Walls</button>\r\n                <button className = \"button\" onClick={()=>randomweight(grid)}>Random Weights</button>\r\n                <div className=\"button\">\r\n                <label for=\"select\" id=\"labeltext\">Speed:</label>\r\n                <select name=\"Speed\"  onChange = {(e)=>{changespeed(e)}} className=\"select\" id=\"select\" >\r\n                    <option value={fast} >Fast</option>\r\n                    <option value = {average}>Average</option>\r\n                    <option value={slow}>Slow</option>\r\n                </select>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"grid\" \r\n            \r\n            >{grid.map((display))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PathFindingVisualizer;\r\n","import {isrunning} from \"../PathFindingVisualizer\";\r\n\r\nexport function randommaze(grid)\r\n{ if(isrunning) return;\r\nlet r = grid.length;\r\nlet c = grid[0].length;\r\n\r\nlet randompos = []; \r\nfor(let i=0;i<60;i++)\r\n{\r\n    randompos.push([Math.floor(Math.random()*r),Math.floor(Math.random()*c)]);\r\n}\r\n\r\nfor(let i=0;i<randompos.length;i++)\r\n{   if(grid[randompos[i][0]][randompos[i][1]].start || grid[randompos[i][0]][randompos[i][1]].target || grid[randompos[i][0]][randompos[i][1]].weighted ) continue; \r\n    grid[randompos[i][0]][randompos[i][1]].wall = true;\r\n    document.getElementById(`${randompos[i][0]}-${randompos[i][1]}`).classList.add(\"wall\");\r\n}\r\n\r\n}","\r\nimport {isrunning} from \"../PathFindingVisualizer\";\r\n\r\nexport function randomweight(grid)\r\n{\r\n    if(isrunning) return;\r\nlet r = grid.length;\r\nlet c = grid[0].length;\r\n\r\nlet randompos = []; \r\nfor(let i=0;i<40;i++)\r\n{\r\n    randompos.push([Math.floor(Math.random()*r),Math.floor(Math.random()*c)]);\r\n}\r\n\r\nfor(let i=0;i<randompos.length;i++)\r\n{   if(grid[randompos[i][0]][randompos[i][1]].start || grid[randompos[i][0]][randompos[i][1]].target || grid[randompos[i][0]][randompos[i][1]].wall ) continue; \r\n    grid[randompos[i][0]][randompos[i][1]].weighted = true;\r\n    document.getElementById(`${randompos[i][0]}-${randompos[i][1]}`).classList.add(\"weighted\");\r\n}\r\n\r\n}","import './App.css';\nimport PathFindingVisualizer from \"./PathfindingVisualizer/PathFindingVisualizer\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PathFindingVisualizer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}